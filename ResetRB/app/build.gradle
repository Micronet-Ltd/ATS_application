apply plugin: 'com.android.application'

android {
    signingConfigs {
        a300keys
    }

    compileSdkVersion 23

    defaultConfig {
        applicationId "com.micronet.dsc.resetrb"
        minSdkVersion 15
        targetSdkVersion 15
        versionCode 230
        versionName "2.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.a300keys
        }
        debug {
            signingConfig signingConfigs.a300keys
        }

    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    //compile 'com.android.support:appcompat-v7:23.4.0'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    testImplementation 'org.mockito:mockito-core:2.25.0'

    // Powermock to mock static methods
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:2.0.0'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0'
}


def props = new Properties()
props.load(new FileInputStream(rootProject.file("a300keys.properties")))
android.signingConfigs.a300keys.storeFile rootProject.file(props.keyStore)
android.signingConfigs.a300keys.storePassword props.keyStorePassword
android.signingConfigs.a300keys.keyAlias props.keyAlias
android.signingConfigs.a300keys.keyPassword props.keyAliasPassword
